// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

package com.dingodb.pb.meta;

public interface PartitionRuleOrBuilder extends
    // @@protoc_insertion_point(interface_extends:dingodb.pb.meta.PartitionRule)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated string columns = 1 [json_name = "columns"];</code>
   * @return A list containing the columns.
   */
  java.util.List<java.lang.String>
      getColumnsList();
  /**
   * <code>repeated string columns = 1 [json_name = "columns"];</code>
   * @return The count of columns.
   */
  int getColumnsCount();
  /**
   * <code>repeated string columns = 1 [json_name = "columns"];</code>
   * @param index The index of the element to return.
   * @return The columns at the given index.
   */
  java.lang.String getColumns(int index);
  /**
   * <code>repeated string columns = 1 [json_name = "columns"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the columns at the given index.
   */
  com.google.protobuf.ByteString
      getColumnsBytes(int index);

  /**
   * <code>.dingodb.pb.meta.PartitionStrategy strategy = 2 [json_name = "strategy"];</code>
   * @return The enum numeric value on the wire for strategy.
   */
  int getStrategyValue();
  /**
   * <code>.dingodb.pb.meta.PartitionStrategy strategy = 2 [json_name = "strategy"];</code>
   * @return The strategy.
   */
  com.dingodb.pb.meta.PartitionStrategy getStrategy();

  /**
   * <code>.dingodb.pb.meta.RangePartition range_partition = 3 [json_name = "rangePartition"];</code>
   * @return Whether the rangePartition field is set.
   */
  boolean hasRangePartition();
  /**
   * <code>.dingodb.pb.meta.RangePartition range_partition = 3 [json_name = "rangePartition"];</code>
   * @return The rangePartition.
   */
  com.dingodb.pb.meta.RangePartition getRangePartition();
  /**
   * <code>.dingodb.pb.meta.RangePartition range_partition = 3 [json_name = "rangePartition"];</code>
   */
  com.dingodb.pb.meta.RangePartitionOrBuilder getRangePartitionOrBuilder();

  /**
   * <code>.dingodb.pb.meta.HashPartition hash_partition = 4 [json_name = "hashPartition"];</code>
   * @return Whether the hashPartition field is set.
   */
  boolean hasHashPartition();
  /**
   * <code>.dingodb.pb.meta.HashPartition hash_partition = 4 [json_name = "hashPartition"];</code>
   * @return The hashPartition.
   */
  com.dingodb.pb.meta.HashPartition getHashPartition();
  /**
   * <code>.dingodb.pb.meta.HashPartition hash_partition = 4 [json_name = "hashPartition"];</code>
   */
  com.dingodb.pb.meta.HashPartitionOrBuilder getHashPartitionOrBuilder();
}
