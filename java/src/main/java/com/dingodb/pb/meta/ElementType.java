// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

package com.dingodb.pb.meta;

/**
 * <pre>
 * Define ElementType about Composite Structure.
 * </pre>
 *
 * Protobuf enum {@code dingodb.pb.meta.ElementType}
 */
public enum ElementType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ELEM_TYPE_DOUBLE = 0;</code>
   */
  ELEM_TYPE_DOUBLE(0),
  /**
   * <code>ELEM_TYPE_FLOAT = 1;</code>
   */
  ELEM_TYPE_FLOAT(1),
  /**
   * <code>ELEM_TYPE_INT32 = 2;</code>
   */
  ELEM_TYPE_INT32(2),
  /**
   * <code>ELEM_TYPE_INT64 = 3;</code>
   */
  ELEM_TYPE_INT64(3),
  /**
   * <code>ELEM_TYPE_UINT32 = 4;</code>
   */
  ELEM_TYPE_UINT32(4),
  /**
   * <code>ELEM_TYPE_UINT64 = 5;</code>
   */
  ELEM_TYPE_UINT64(5),
  /**
   * <code>ELEM_TYPE_BOOLEAN = 6;</code>
   */
  ELEM_TYPE_BOOLEAN(6),
  /**
   * <code>ELEM_TYPE_STRING = 7;</code>
   */
  ELEM_TYPE_STRING(7),
  /**
   * <code>ELEM_TYPE_BYTES = 8;</code>
   */
  ELEM_TYPE_BYTES(8),
  /**
   * <code>ELEM_TYPE_FIX32 = 9;</code>
   */
  ELEM_TYPE_FIX32(9),
  /**
   * <code>ELEM_TYPE_FIX64 = 10;</code>
   */
  ELEM_TYPE_FIX64(10),
  /**
   * <code>ELEM_TYPE_SFIX32 = 11;</code>
   */
  ELEM_TYPE_SFIX32(11),
  /**
   * <code>ELEM_TYPE_SFIX64 = 12;</code>
   */
  ELEM_TYPE_SFIX64(12),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ELEM_TYPE_DOUBLE = 0;</code>
   */
  public static final int ELEM_TYPE_DOUBLE_VALUE = 0;
  /**
   * <code>ELEM_TYPE_FLOAT = 1;</code>
   */
  public static final int ELEM_TYPE_FLOAT_VALUE = 1;
  /**
   * <code>ELEM_TYPE_INT32 = 2;</code>
   */
  public static final int ELEM_TYPE_INT32_VALUE = 2;
  /**
   * <code>ELEM_TYPE_INT64 = 3;</code>
   */
  public static final int ELEM_TYPE_INT64_VALUE = 3;
  /**
   * <code>ELEM_TYPE_UINT32 = 4;</code>
   */
  public static final int ELEM_TYPE_UINT32_VALUE = 4;
  /**
   * <code>ELEM_TYPE_UINT64 = 5;</code>
   */
  public static final int ELEM_TYPE_UINT64_VALUE = 5;
  /**
   * <code>ELEM_TYPE_BOOLEAN = 6;</code>
   */
  public static final int ELEM_TYPE_BOOLEAN_VALUE = 6;
  /**
   * <code>ELEM_TYPE_STRING = 7;</code>
   */
  public static final int ELEM_TYPE_STRING_VALUE = 7;
  /**
   * <code>ELEM_TYPE_BYTES = 8;</code>
   */
  public static final int ELEM_TYPE_BYTES_VALUE = 8;
  /**
   * <code>ELEM_TYPE_FIX32 = 9;</code>
   */
  public static final int ELEM_TYPE_FIX32_VALUE = 9;
  /**
   * <code>ELEM_TYPE_FIX64 = 10;</code>
   */
  public static final int ELEM_TYPE_FIX64_VALUE = 10;
  /**
   * <code>ELEM_TYPE_SFIX32 = 11;</code>
   */
  public static final int ELEM_TYPE_SFIX32_VALUE = 11;
  /**
   * <code>ELEM_TYPE_SFIX64 = 12;</code>
   */
  public static final int ELEM_TYPE_SFIX64_VALUE = 12;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ElementType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ElementType forNumber(int value) {
    switch (value) {
      case 0: return ELEM_TYPE_DOUBLE;
      case 1: return ELEM_TYPE_FLOAT;
      case 2: return ELEM_TYPE_INT32;
      case 3: return ELEM_TYPE_INT64;
      case 4: return ELEM_TYPE_UINT32;
      case 5: return ELEM_TYPE_UINT64;
      case 6: return ELEM_TYPE_BOOLEAN;
      case 7: return ELEM_TYPE_STRING;
      case 8: return ELEM_TYPE_BYTES;
      case 9: return ELEM_TYPE_FIX32;
      case 10: return ELEM_TYPE_FIX64;
      case 11: return ELEM_TYPE_SFIX32;
      case 12: return ELEM_TYPE_SFIX64;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ElementType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ElementType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ElementType>() {
          public ElementType findValueByNumber(int number) {
            return ElementType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dingodb.pb.meta.MetaProto.getDescriptor().getEnumTypes().get(3);
  }

  private static final ElementType[] VALUES = values();

  public static ElementType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ElementType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dingodb.pb.meta.ElementType)
}

