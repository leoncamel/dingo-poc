// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

package com.dingodb.pb.meta;

/**
 * <pre>
 * Schema
 * </pre>
 *
 * Protobuf type {@code dingodb.pb.meta.Schema}
 */
public final class Schema extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dingodb.pb.meta.Schema)
    SchemaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Schema.newBuilder() to construct.
  private Schema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Schema() {
    name_ = "";
    schemaIds_ = java.util.Collections.emptyList();
    tableIds_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Schema();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_Schema_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_Schema_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dingodb.pb.meta.Schema.class, com.dingodb.pb.meta.Schema.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private com.dingodb.pb.meta.DingoCommonId id_;
  /**
   * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return id_ != null;
  }
  /**
   * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public com.dingodb.pb.meta.DingoCommonId getId() {
    return id_ == null ? com.dingodb.pb.meta.DingoCommonId.getDefaultInstance() : id_;
  }
  /**
   * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.DingoCommonIdOrBuilder getIdOrBuilder() {
    return id_ == null ? com.dingodb.pb.meta.DingoCommonId.getDefaultInstance() : id_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEMA_IDS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.dingodb.pb.meta.DingoCommonId> schemaIds_;
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
   */
  @java.lang.Override
  public java.util.List<com.dingodb.pb.meta.DingoCommonId> getSchemaIdsList() {
    return schemaIds_;
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
      getSchemaIdsOrBuilderList() {
    return schemaIds_;
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
   */
  @java.lang.Override
  public int getSchemaIdsCount() {
    return schemaIds_.size();
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.DingoCommonId getSchemaIds(int index) {
    return schemaIds_.get(index);
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.DingoCommonIdOrBuilder getSchemaIdsOrBuilder(
      int index) {
    return schemaIds_.get(index);
  }

  public static final int TABLE_IDS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.dingodb.pb.meta.DingoCommonId> tableIds_;
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
   */
  @java.lang.Override
  public java.util.List<com.dingodb.pb.meta.DingoCommonId> getTableIdsList() {
    return tableIds_;
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
      getTableIdsOrBuilderList() {
    return tableIds_;
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
   */
  @java.lang.Override
  public int getTableIdsCount() {
    return tableIds_.size();
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.DingoCommonId getTableIds(int index) {
    return tableIds_.get(index);
  }
  /**
   * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.DingoCommonIdOrBuilder getTableIdsOrBuilder(
      int index) {
    return tableIds_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != null) {
      output.writeMessage(1, getId());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    for (int i = 0; i < schemaIds_.size(); i++) {
      output.writeMessage(3, schemaIds_.get(i));
    }
    for (int i = 0; i < tableIds_.size(); i++) {
      output.writeMessage(4, tableIds_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getId());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    for (int i = 0; i < schemaIds_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, schemaIds_.get(i));
    }
    for (int i = 0; i < tableIds_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, tableIds_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dingodb.pb.meta.Schema)) {
      return super.equals(obj);
    }
    com.dingodb.pb.meta.Schema other = (com.dingodb.pb.meta.Schema) obj;

    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (!getName()
        .equals(other.getName())) return false;
    if (!getSchemaIdsList()
        .equals(other.getSchemaIdsList())) return false;
    if (!getTableIdsList()
        .equals(other.getTableIdsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getSchemaIdsCount() > 0) {
      hash = (37 * hash) + SCHEMA_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getSchemaIdsList().hashCode();
    }
    if (getTableIdsCount() > 0) {
      hash = (37 * hash) + TABLE_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getTableIdsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dingodb.pb.meta.Schema parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dingodb.pb.meta.Schema parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dingodb.pb.meta.Schema parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dingodb.pb.meta.Schema parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dingodb.pb.meta.Schema prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Schema
   * </pre>
   *
   * Protobuf type {@code dingodb.pb.meta.Schema}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dingodb.pb.meta.Schema)
      com.dingodb.pb.meta.SchemaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_Schema_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_Schema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dingodb.pb.meta.Schema.class, com.dingodb.pb.meta.Schema.Builder.class);
    }

    // Construct using com.dingodb.pb.meta.Schema.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = null;
      if (idBuilder_ != null) {
        idBuilder_.dispose();
        idBuilder_ = null;
      }
      name_ = "";
      if (schemaIdsBuilder_ == null) {
        schemaIds_ = java.util.Collections.emptyList();
      } else {
        schemaIds_ = null;
        schemaIdsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (tableIdsBuilder_ == null) {
        tableIds_ = java.util.Collections.emptyList();
      } else {
        tableIds_ = null;
        tableIdsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_Schema_descriptor;
    }

    @java.lang.Override
    public com.dingodb.pb.meta.Schema getDefaultInstanceForType() {
      return com.dingodb.pb.meta.Schema.getDefaultInstance();
    }

    @java.lang.Override
    public com.dingodb.pb.meta.Schema build() {
      com.dingodb.pb.meta.Schema result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dingodb.pb.meta.Schema buildPartial() {
      com.dingodb.pb.meta.Schema result = new com.dingodb.pb.meta.Schema(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.dingodb.pb.meta.Schema result) {
      if (schemaIdsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          schemaIds_ = java.util.Collections.unmodifiableList(schemaIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.schemaIds_ = schemaIds_;
      } else {
        result.schemaIds_ = schemaIdsBuilder_.build();
      }
      if (tableIdsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          tableIds_ = java.util.Collections.unmodifiableList(tableIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tableIds_ = tableIds_;
      } else {
        result.tableIds_ = tableIdsBuilder_.build();
      }
    }

    private void buildPartial0(com.dingodb.pb.meta.Schema result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = idBuilder_ == null
            ? id_
            : idBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dingodb.pb.meta.Schema) {
        return mergeFrom((com.dingodb.pb.meta.Schema)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dingodb.pb.meta.Schema other) {
      if (other == com.dingodb.pb.meta.Schema.getDefaultInstance()) return this;
      if (other.hasId()) {
        mergeId(other.getId());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (schemaIdsBuilder_ == null) {
        if (!other.schemaIds_.isEmpty()) {
          if (schemaIds_.isEmpty()) {
            schemaIds_ = other.schemaIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSchemaIdsIsMutable();
            schemaIds_.addAll(other.schemaIds_);
          }
          onChanged();
        }
      } else {
        if (!other.schemaIds_.isEmpty()) {
          if (schemaIdsBuilder_.isEmpty()) {
            schemaIdsBuilder_.dispose();
            schemaIdsBuilder_ = null;
            schemaIds_ = other.schemaIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
            schemaIdsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSchemaIdsFieldBuilder() : null;
          } else {
            schemaIdsBuilder_.addAllMessages(other.schemaIds_);
          }
        }
      }
      if (tableIdsBuilder_ == null) {
        if (!other.tableIds_.isEmpty()) {
          if (tableIds_.isEmpty()) {
            tableIds_ = other.tableIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTableIdsIsMutable();
            tableIds_.addAll(other.tableIds_);
          }
          onChanged();
        }
      } else {
        if (!other.tableIds_.isEmpty()) {
          if (tableIdsBuilder_.isEmpty()) {
            tableIdsBuilder_.dispose();
            tableIdsBuilder_ = null;
            tableIds_ = other.tableIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
            tableIdsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTableIdsFieldBuilder() : null;
          } else {
            tableIdsBuilder_.addAllMessages(other.tableIds_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.dingodb.pb.meta.DingoCommonId m =
                  input.readMessage(
                      com.dingodb.pb.meta.DingoCommonId.parser(),
                      extensionRegistry);
              if (schemaIdsBuilder_ == null) {
                ensureSchemaIdsIsMutable();
                schemaIds_.add(m);
              } else {
                schemaIdsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.dingodb.pb.meta.DingoCommonId m =
                  input.readMessage(
                      com.dingodb.pb.meta.DingoCommonId.parser(),
                      extensionRegistry);
              if (tableIdsBuilder_ == null) {
                ensureTableIdsIsMutable();
                tableIds_.add(m);
              } else {
                tableIdsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.dingodb.pb.meta.DingoCommonId id_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder> idBuilder_;
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public com.dingodb.pb.meta.DingoCommonId getId() {
      if (idBuilder_ == null) {
        return id_ == null ? com.dingodb.pb.meta.DingoCommonId.getDefaultInstance() : id_;
      } else {
        return idBuilder_.getMessage();
      }
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    public Builder setId(com.dingodb.pb.meta.DingoCommonId value) {
      if (idBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        id_ = value;
      } else {
        idBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    public Builder setId(
        com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (idBuilder_ == null) {
        id_ = builderForValue.build();
      } else {
        idBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    public Builder mergeId(com.dingodb.pb.meta.DingoCommonId value) {
      if (idBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          id_ != null &&
          id_ != com.dingodb.pb.meta.DingoCommonId.getDefaultInstance()) {
          getIdBuilder().mergeFrom(value);
        } else {
          id_ = value;
        }
      } else {
        idBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    public Builder clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = null;
      if (idBuilder_ != null) {
        idBuilder_.dispose();
        idBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder getIdBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getIdFieldBuilder().getBuilder();
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonIdOrBuilder getIdOrBuilder() {
      if (idBuilder_ != null) {
        return idBuilder_.getMessageOrBuilder();
      } else {
        return id_ == null ?
            com.dingodb.pb.meta.DingoCommonId.getDefaultInstance() : id_;
      }
    }
    /**
     * <code>.dingodb.pb.meta.DingoCommonId id = 1 [json_name = "id"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
        getIdFieldBuilder() {
      if (idBuilder_ == null) {
        idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder>(
                getId(),
                getParentForChildren(),
                isClean());
        id_ = null;
      }
      return idBuilder_;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<com.dingodb.pb.meta.DingoCommonId> schemaIds_ =
      java.util.Collections.emptyList();
    private void ensureSchemaIdsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        schemaIds_ = new java.util.ArrayList<com.dingodb.pb.meta.DingoCommonId>(schemaIds_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder> schemaIdsBuilder_;

    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public java.util.List<com.dingodb.pb.meta.DingoCommonId> getSchemaIdsList() {
      if (schemaIdsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(schemaIds_);
      } else {
        return schemaIdsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public int getSchemaIdsCount() {
      if (schemaIdsBuilder_ == null) {
        return schemaIds_.size();
      } else {
        return schemaIdsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId getSchemaIds(int index) {
      if (schemaIdsBuilder_ == null) {
        return schemaIds_.get(index);
      } else {
        return schemaIdsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder setSchemaIds(
        int index, com.dingodb.pb.meta.DingoCommonId value) {
      if (schemaIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSchemaIdsIsMutable();
        schemaIds_.set(index, value);
        onChanged();
      } else {
        schemaIdsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder setSchemaIds(
        int index, com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (schemaIdsBuilder_ == null) {
        ensureSchemaIdsIsMutable();
        schemaIds_.set(index, builderForValue.build());
        onChanged();
      } else {
        schemaIdsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder addSchemaIds(com.dingodb.pb.meta.DingoCommonId value) {
      if (schemaIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSchemaIdsIsMutable();
        schemaIds_.add(value);
        onChanged();
      } else {
        schemaIdsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder addSchemaIds(
        int index, com.dingodb.pb.meta.DingoCommonId value) {
      if (schemaIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSchemaIdsIsMutable();
        schemaIds_.add(index, value);
        onChanged();
      } else {
        schemaIdsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder addSchemaIds(
        com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (schemaIdsBuilder_ == null) {
        ensureSchemaIdsIsMutable();
        schemaIds_.add(builderForValue.build());
        onChanged();
      } else {
        schemaIdsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder addSchemaIds(
        int index, com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (schemaIdsBuilder_ == null) {
        ensureSchemaIdsIsMutable();
        schemaIds_.add(index, builderForValue.build());
        onChanged();
      } else {
        schemaIdsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder addAllSchemaIds(
        java.lang.Iterable<? extends com.dingodb.pb.meta.DingoCommonId> values) {
      if (schemaIdsBuilder_ == null) {
        ensureSchemaIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, schemaIds_);
        onChanged();
      } else {
        schemaIdsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder clearSchemaIds() {
      if (schemaIdsBuilder_ == null) {
        schemaIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        schemaIdsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public Builder removeSchemaIds(int index) {
      if (schemaIdsBuilder_ == null) {
        ensureSchemaIdsIsMutable();
        schemaIds_.remove(index);
        onChanged();
      } else {
        schemaIdsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder getSchemaIdsBuilder(
        int index) {
      return getSchemaIdsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonIdOrBuilder getSchemaIdsOrBuilder(
        int index) {
      if (schemaIdsBuilder_ == null) {
        return schemaIds_.get(index);  } else {
        return schemaIdsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public java.util.List<? extends com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
         getSchemaIdsOrBuilderList() {
      if (schemaIdsBuilder_ != null) {
        return schemaIdsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(schemaIds_);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder addSchemaIdsBuilder() {
      return getSchemaIdsFieldBuilder().addBuilder(
          com.dingodb.pb.meta.DingoCommonId.getDefaultInstance());
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder addSchemaIdsBuilder(
        int index) {
      return getSchemaIdsFieldBuilder().addBuilder(
          index, com.dingodb.pb.meta.DingoCommonId.getDefaultInstance());
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId schema_ids = 3 [json_name = "schemaIds"];</code>
     */
    public java.util.List<com.dingodb.pb.meta.DingoCommonId.Builder> 
         getSchemaIdsBuilderList() {
      return getSchemaIdsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
        getSchemaIdsFieldBuilder() {
      if (schemaIdsBuilder_ == null) {
        schemaIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder>(
                schemaIds_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        schemaIds_ = null;
      }
      return schemaIdsBuilder_;
    }

    private java.util.List<com.dingodb.pb.meta.DingoCommonId> tableIds_ =
      java.util.Collections.emptyList();
    private void ensureTableIdsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        tableIds_ = new java.util.ArrayList<com.dingodb.pb.meta.DingoCommonId>(tableIds_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder> tableIdsBuilder_;

    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public java.util.List<com.dingodb.pb.meta.DingoCommonId> getTableIdsList() {
      if (tableIdsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tableIds_);
      } else {
        return tableIdsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public int getTableIdsCount() {
      if (tableIdsBuilder_ == null) {
        return tableIds_.size();
      } else {
        return tableIdsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId getTableIds(int index) {
      if (tableIdsBuilder_ == null) {
        return tableIds_.get(index);
      } else {
        return tableIdsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder setTableIds(
        int index, com.dingodb.pb.meta.DingoCommonId value) {
      if (tableIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTableIdsIsMutable();
        tableIds_.set(index, value);
        onChanged();
      } else {
        tableIdsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder setTableIds(
        int index, com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (tableIdsBuilder_ == null) {
        ensureTableIdsIsMutable();
        tableIds_.set(index, builderForValue.build());
        onChanged();
      } else {
        tableIdsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder addTableIds(com.dingodb.pb.meta.DingoCommonId value) {
      if (tableIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTableIdsIsMutable();
        tableIds_.add(value);
        onChanged();
      } else {
        tableIdsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder addTableIds(
        int index, com.dingodb.pb.meta.DingoCommonId value) {
      if (tableIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTableIdsIsMutable();
        tableIds_.add(index, value);
        onChanged();
      } else {
        tableIdsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder addTableIds(
        com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (tableIdsBuilder_ == null) {
        ensureTableIdsIsMutable();
        tableIds_.add(builderForValue.build());
        onChanged();
      } else {
        tableIdsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder addTableIds(
        int index, com.dingodb.pb.meta.DingoCommonId.Builder builderForValue) {
      if (tableIdsBuilder_ == null) {
        ensureTableIdsIsMutable();
        tableIds_.add(index, builderForValue.build());
        onChanged();
      } else {
        tableIdsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder addAllTableIds(
        java.lang.Iterable<? extends com.dingodb.pb.meta.DingoCommonId> values) {
      if (tableIdsBuilder_ == null) {
        ensureTableIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tableIds_);
        onChanged();
      } else {
        tableIdsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder clearTableIds() {
      if (tableIdsBuilder_ == null) {
        tableIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        tableIdsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public Builder removeTableIds(int index) {
      if (tableIdsBuilder_ == null) {
        ensureTableIdsIsMutable();
        tableIds_.remove(index);
        onChanged();
      } else {
        tableIdsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder getTableIdsBuilder(
        int index) {
      return getTableIdsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonIdOrBuilder getTableIdsOrBuilder(
        int index) {
      if (tableIdsBuilder_ == null) {
        return tableIds_.get(index);  } else {
        return tableIdsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public java.util.List<? extends com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
         getTableIdsOrBuilderList() {
      if (tableIdsBuilder_ != null) {
        return tableIdsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tableIds_);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder addTableIdsBuilder() {
      return getTableIdsFieldBuilder().addBuilder(
          com.dingodb.pb.meta.DingoCommonId.getDefaultInstance());
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public com.dingodb.pb.meta.DingoCommonId.Builder addTableIdsBuilder(
        int index) {
      return getTableIdsFieldBuilder().addBuilder(
          index, com.dingodb.pb.meta.DingoCommonId.getDefaultInstance());
    }
    /**
     * <code>repeated .dingodb.pb.meta.DingoCommonId table_ids = 4 [json_name = "tableIds"];</code>
     */
    public java.util.List<com.dingodb.pb.meta.DingoCommonId.Builder> 
         getTableIdsBuilderList() {
      return getTableIdsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder> 
        getTableIdsFieldBuilder() {
      if (tableIdsBuilder_ == null) {
        tableIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.dingodb.pb.meta.DingoCommonId, com.dingodb.pb.meta.DingoCommonId.Builder, com.dingodb.pb.meta.DingoCommonIdOrBuilder>(
                tableIds_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        tableIds_ = null;
      }
      return tableIdsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dingodb.pb.meta.Schema)
  }

  // @@protoc_insertion_point(class_scope:dingodb.pb.meta.Schema)
  private static final com.dingodb.pb.meta.Schema DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dingodb.pb.meta.Schema();
  }

  public static com.dingodb.pb.meta.Schema getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Schema>
      PARSER = new com.google.protobuf.AbstractParser<Schema>() {
    @java.lang.Override
    public Schema parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Schema> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Schema> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dingodb.pb.meta.Schema getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

