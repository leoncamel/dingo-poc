// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

package com.dingodb.pb.meta;

/**
 * <pre>
 * TableDefinition is for SQL
 * </pre>
 *
 * Protobuf type {@code dingodb.pb.meta.TableDefinition}
 */
public final class TableDefinition extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dingodb.pb.meta.TableDefinition)
    TableDefinitionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TableDefinition.newBuilder() to construct.
  private TableDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TableDefinition() {
    name_ = "";
    columns_ = java.util.Collections.emptyList();
    engine_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TableDefinition();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetIndexes();
      case 8:
        return internalGetProperties();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dingodb.pb.meta.TableDefinition.class, com.dingodb.pb.meta.TableDefinition.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLUMNS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.dingodb.pb.meta.ColumnDefinition> columns_;
  /**
   * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public java.util.List<com.dingodb.pb.meta.ColumnDefinition> getColumnsList() {
    return columns_;
  }
  /**
   * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.dingodb.pb.meta.ColumnDefinitionOrBuilder> 
      getColumnsOrBuilderList() {
    return columns_;
  }
  /**
   * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public int getColumnsCount() {
    return columns_.size();
  }
  /**
   * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.ColumnDefinition getColumns(int index) {
    return columns_.get(index);
  }
  /**
   * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.ColumnDefinitionOrBuilder getColumnsOrBuilder(
      int index) {
    return columns_.get(index);
  }

  public static final int INDEXES_FIELD_NUMBER = 3;
  private static final class IndexesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.dingodb.pb.meta.Index> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.dingodb.pb.meta.Index>newDefaultInstance(
                com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_IndexesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.dingodb.pb.meta.Index.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.dingodb.pb.meta.Index> indexes_;
  private com.google.protobuf.MapField<java.lang.String, com.dingodb.pb.meta.Index>
  internalGetIndexes() {
    if (indexes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          IndexesDefaultEntryHolder.defaultEntry);
    }
    return indexes_;
  }
  public int getIndexesCount() {
    return internalGetIndexes().getMap().size();
  }
  /**
   * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public boolean containsIndexes(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetIndexes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getIndexesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> getIndexes() {
    return getIndexesMap();
  }
  /**
   * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> getIndexesMap() {
    return internalGetIndexes().getMap();
  }
  /**
   * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public /* nullable */
com.dingodb.pb.meta.Index getIndexesOrDefault(
      java.lang.String key,
      /* nullable */
com.dingodb.pb.meta.Index defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> map =
        internalGetIndexes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.Index getIndexesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> map =
        internalGetIndexes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int VERSION_FIELD_NUMBER = 4;
  private int version_ = 0;
  /**
   * <code>uint32 version = 4 [json_name = "version"];</code>
   * @return The version.
   */
  @java.lang.Override
  public int getVersion() {
    return version_;
  }

  public static final int TTL_FIELD_NUMBER = 5;
  private long ttl_ = 0L;
  /**
   * <code>uint64 ttl = 5 [json_name = "ttl"];</code>
   * @return The ttl.
   */
  @java.lang.Override
  public long getTtl() {
    return ttl_;
  }

  public static final int TABLE_PARTITION_FIELD_NUMBER = 6;
  private com.dingodb.pb.meta.PartitionRule tablePartition_;
  /**
   * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
   * @return Whether the tablePartition field is set.
   */
  @java.lang.Override
  public boolean hasTablePartition() {
    return tablePartition_ != null;
  }
  /**
   * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
   * @return The tablePartition.
   */
  @java.lang.Override
  public com.dingodb.pb.meta.PartitionRule getTablePartition() {
    return tablePartition_ == null ? com.dingodb.pb.meta.PartitionRule.getDefaultInstance() : tablePartition_;
  }
  /**
   * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
   */
  @java.lang.Override
  public com.dingodb.pb.meta.PartitionRuleOrBuilder getTablePartitionOrBuilder() {
    return tablePartition_ == null ? com.dingodb.pb.meta.PartitionRule.getDefaultInstance() : tablePartition_;
  }

  public static final int ENGINE_FIELD_NUMBER = 7;
  private int engine_ = 0;
  /**
   * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
   * @return The enum numeric value on the wire for engine.
   */
  @java.lang.Override public int getEngineValue() {
    return engine_;
  }
  /**
   * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
   * @return The engine.
   */
  @java.lang.Override public com.dingodb.pb.common.Engine getEngine() {
    com.dingodb.pb.common.Engine result = com.dingodb.pb.common.Engine.forNumber(engine_);
    return result == null ? com.dingodb.pb.common.Engine.UNRECOGNIZED : result;
  }

  public static final int PROPERTIES_FIELD_NUMBER = 8;
  private static final class PropertiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_PropertiesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> properties_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetProperties() {
    if (properties_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PropertiesDefaultEntryHolder.defaultEntry);
    }
    return properties_;
  }
  public int getPropertiesCount() {
    return internalGetProperties().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
   */
  @java.lang.Override
  public boolean containsProperties(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetProperties().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getProperties() {
    return getPropertiesMap();
  }
  /**
   * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getPropertiesMap() {
    return internalGetProperties().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetProperties().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
   */
  @java.lang.Override
  public java.lang.String getPropertiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetProperties().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    for (int i = 0; i < columns_.size(); i++) {
      output.writeMessage(2, columns_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetIndexes(),
        IndexesDefaultEntryHolder.defaultEntry,
        3);
    if (version_ != 0) {
      output.writeUInt32(4, version_);
    }
    if (ttl_ != 0L) {
      output.writeUInt64(5, ttl_);
    }
    if (tablePartition_ != null) {
      output.writeMessage(6, getTablePartition());
    }
    if (engine_ != com.dingodb.pb.common.Engine.ENG_ROCKSDB.getNumber()) {
      output.writeEnum(7, engine_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetProperties(),
        PropertiesDefaultEntryHolder.defaultEntry,
        8);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (int i = 0; i < columns_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, columns_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, com.dingodb.pb.meta.Index> entry
         : internalGetIndexes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.dingodb.pb.meta.Index>
      indexes__ = IndexesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, indexes__);
    }
    if (version_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, version_);
    }
    if (ttl_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, ttl_);
    }
    if (tablePartition_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTablePartition());
    }
    if (engine_ != com.dingodb.pb.common.Engine.ENG_ROCKSDB.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, engine_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetProperties().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      properties__ = PropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, properties__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dingodb.pb.meta.TableDefinition)) {
      return super.equals(obj);
    }
    com.dingodb.pb.meta.TableDefinition other = (com.dingodb.pb.meta.TableDefinition) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getColumnsList()
        .equals(other.getColumnsList())) return false;
    if (!internalGetIndexes().equals(
        other.internalGetIndexes())) return false;
    if (getVersion()
        != other.getVersion()) return false;
    if (getTtl()
        != other.getTtl()) return false;
    if (hasTablePartition() != other.hasTablePartition()) return false;
    if (hasTablePartition()) {
      if (!getTablePartition()
          .equals(other.getTablePartition())) return false;
    }
    if (engine_ != other.engine_) return false;
    if (!internalGetProperties().equals(
        other.internalGetProperties())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getColumnsCount() > 0) {
      hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getColumnsList().hashCode();
    }
    if (!internalGetIndexes().getMap().isEmpty()) {
      hash = (37 * hash) + INDEXES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetIndexes().hashCode();
    }
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion();
    hash = (37 * hash) + TTL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTtl());
    if (hasTablePartition()) {
      hash = (37 * hash) + TABLE_PARTITION_FIELD_NUMBER;
      hash = (53 * hash) + getTablePartition().hashCode();
    }
    hash = (37 * hash) + ENGINE_FIELD_NUMBER;
    hash = (53 * hash) + engine_;
    if (!internalGetProperties().getMap().isEmpty()) {
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetProperties().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dingodb.pb.meta.TableDefinition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dingodb.pb.meta.TableDefinition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dingodb.pb.meta.TableDefinition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dingodb.pb.meta.TableDefinition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * TableDefinition is for SQL
   * </pre>
   *
   * Protobuf type {@code dingodb.pb.meta.TableDefinition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dingodb.pb.meta.TableDefinition)
      com.dingodb.pb.meta.TableDefinitionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetIndexes();
        case 8:
          return internalGetProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableIndexes();
        case 8:
          return internalGetMutableProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dingodb.pb.meta.TableDefinition.class, com.dingodb.pb.meta.TableDefinition.Builder.class);
    }

    // Construct using com.dingodb.pb.meta.TableDefinition.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
      } else {
        columns_ = null;
        columnsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableIndexes().clear();
      version_ = 0;
      ttl_ = 0L;
      tablePartition_ = null;
      if (tablePartitionBuilder_ != null) {
        tablePartitionBuilder_.dispose();
        tablePartitionBuilder_ = null;
      }
      engine_ = 0;
      internalGetMutableProperties().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dingodb.pb.meta.MetaProto.internal_static_dingodb_pb_meta_TableDefinition_descriptor;
    }

    @java.lang.Override
    public com.dingodb.pb.meta.TableDefinition getDefaultInstanceForType() {
      return com.dingodb.pb.meta.TableDefinition.getDefaultInstance();
    }

    @java.lang.Override
    public com.dingodb.pb.meta.TableDefinition build() {
      com.dingodb.pb.meta.TableDefinition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dingodb.pb.meta.TableDefinition buildPartial() {
      com.dingodb.pb.meta.TableDefinition result = new com.dingodb.pb.meta.TableDefinition(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.dingodb.pb.meta.TableDefinition result) {
      if (columnsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          columns_ = java.util.Collections.unmodifiableList(columns_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.columns_ = columns_;
      } else {
        result.columns_ = columnsBuilder_.build();
      }
    }

    private void buildPartial0(com.dingodb.pb.meta.TableDefinition result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.indexes_ = internalGetIndexes();
        result.indexes_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.version_ = version_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.ttl_ = ttl_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.tablePartition_ = tablePartitionBuilder_ == null
            ? tablePartition_
            : tablePartitionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.engine_ = engine_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.properties_ = internalGetProperties();
        result.properties_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dingodb.pb.meta.TableDefinition) {
        return mergeFrom((com.dingodb.pb.meta.TableDefinition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dingodb.pb.meta.TableDefinition other) {
      if (other == com.dingodb.pb.meta.TableDefinition.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (columnsBuilder_ == null) {
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
      } else {
        if (!other.columns_.isEmpty()) {
          if (columnsBuilder_.isEmpty()) {
            columnsBuilder_.dispose();
            columnsBuilder_ = null;
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000002);
            columnsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getColumnsFieldBuilder() : null;
          } else {
            columnsBuilder_.addAllMessages(other.columns_);
          }
        }
      }
      internalGetMutableIndexes().mergeFrom(
          other.internalGetIndexes());
      bitField0_ |= 0x00000004;
      if (other.getVersion() != 0) {
        setVersion(other.getVersion());
      }
      if (other.getTtl() != 0L) {
        setTtl(other.getTtl());
      }
      if (other.hasTablePartition()) {
        mergeTablePartition(other.getTablePartition());
      }
      if (other.engine_ != 0) {
        setEngineValue(other.getEngineValue());
      }
      internalGetMutableProperties().mergeFrom(
          other.internalGetProperties());
      bitField0_ |= 0x00000080;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.dingodb.pb.meta.ColumnDefinition m =
                  input.readMessage(
                      com.dingodb.pb.meta.ColumnDefinition.parser(),
                      extensionRegistry);
              if (columnsBuilder_ == null) {
                ensureColumnsIsMutable();
                columns_.add(m);
              } else {
                columnsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.google.protobuf.MapEntry<java.lang.String, com.dingodb.pb.meta.Index>
              indexes__ = input.readMessage(
                  IndexesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableIndexes().getMutableMap().put(
                  indexes__.getKey(), indexes__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              version_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              ttl_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              input.readMessage(
                  getTablePartitionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              engine_ = input.readEnum();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              properties__ = input.readMessage(
                  PropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableProperties().getMutableMap().put(
                  properties__.getKey(), properties__.getValue());
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.dingodb.pb.meta.ColumnDefinition> columns_ =
      java.util.Collections.emptyList();
    private void ensureColumnsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        columns_ = new java.util.ArrayList<com.dingodb.pb.meta.ColumnDefinition>(columns_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dingodb.pb.meta.ColumnDefinition, com.dingodb.pb.meta.ColumnDefinition.Builder, com.dingodb.pb.meta.ColumnDefinitionOrBuilder> columnsBuilder_;

    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public java.util.List<com.dingodb.pb.meta.ColumnDefinition> getColumnsList() {
      if (columnsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(columns_);
      } else {
        return columnsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public int getColumnsCount() {
      if (columnsBuilder_ == null) {
        return columns_.size();
      } else {
        return columnsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public com.dingodb.pb.meta.ColumnDefinition getColumns(int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);
      } else {
        return columnsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder setColumns(
        int index, com.dingodb.pb.meta.ColumnDefinition value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder setColumns(
        int index, com.dingodb.pb.meta.ColumnDefinition.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.set(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder addColumns(com.dingodb.pb.meta.ColumnDefinition value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder addColumns(
        int index, com.dingodb.pb.meta.ColumnDefinition value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(index, value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder addColumns(
        com.dingodb.pb.meta.ColumnDefinition.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder addColumns(
        int index, com.dingodb.pb.meta.ColumnDefinition.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder addAllColumns(
        java.lang.Iterable<? extends com.dingodb.pb.meta.ColumnDefinition> values) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
      } else {
        columnsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder clearColumns() {
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        columnsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public Builder removeColumns(int index) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.remove(index);
        onChanged();
      } else {
        columnsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public com.dingodb.pb.meta.ColumnDefinition.Builder getColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public com.dingodb.pb.meta.ColumnDefinitionOrBuilder getColumnsOrBuilder(
        int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);  } else {
        return columnsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public java.util.List<? extends com.dingodb.pb.meta.ColumnDefinitionOrBuilder> 
         getColumnsOrBuilderList() {
      if (columnsBuilder_ != null) {
        return columnsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(columns_);
      }
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public com.dingodb.pb.meta.ColumnDefinition.Builder addColumnsBuilder() {
      return getColumnsFieldBuilder().addBuilder(
          com.dingodb.pb.meta.ColumnDefinition.getDefaultInstance());
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public com.dingodb.pb.meta.ColumnDefinition.Builder addColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().addBuilder(
          index, com.dingodb.pb.meta.ColumnDefinition.getDefaultInstance());
    }
    /**
     * <code>repeated .dingodb.pb.meta.ColumnDefinition columns = 2 [json_name = "columns"];</code>
     */
    public java.util.List<com.dingodb.pb.meta.ColumnDefinition.Builder> 
         getColumnsBuilderList() {
      return getColumnsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dingodb.pb.meta.ColumnDefinition, com.dingodb.pb.meta.ColumnDefinition.Builder, com.dingodb.pb.meta.ColumnDefinitionOrBuilder> 
        getColumnsFieldBuilder() {
      if (columnsBuilder_ == null) {
        columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.dingodb.pb.meta.ColumnDefinition, com.dingodb.pb.meta.ColumnDefinition.Builder, com.dingodb.pb.meta.ColumnDefinitionOrBuilder>(
                columns_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        columns_ = null;
      }
      return columnsBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.dingodb.pb.meta.Index> indexes_;
    private com.google.protobuf.MapField<java.lang.String, com.dingodb.pb.meta.Index>
        internalGetIndexes() {
      if (indexes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IndexesDefaultEntryHolder.defaultEntry);
      }
      return indexes_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.dingodb.pb.meta.Index>
        internalGetMutableIndexes() {
      if (indexes_ == null) {
        indexes_ = com.google.protobuf.MapField.newMapField(
            IndexesDefaultEntryHolder.defaultEntry);
      }
      if (!indexes_.isMutable()) {
        indexes_ = indexes_.copy();
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return indexes_;
    }
    public int getIndexesCount() {
      return internalGetIndexes().getMap().size();
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    @java.lang.Override
    public boolean containsIndexes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetIndexes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIndexesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> getIndexes() {
      return getIndexesMap();
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> getIndexesMap() {
      return internalGetIndexes().getMap();
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    @java.lang.Override
    public /* nullable */
com.dingodb.pb.meta.Index getIndexesOrDefault(
        java.lang.String key,
        /* nullable */
com.dingodb.pb.meta.Index defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> map =
          internalGetIndexes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    @java.lang.Override
    public com.dingodb.pb.meta.Index getIndexesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> map =
          internalGetIndexes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearIndexes() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableIndexes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    public Builder removeIndexes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableIndexes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.dingodb.pb.meta.Index>
        getMutableIndexes() {
      bitField0_ |= 0x00000004;
      return internalGetMutableIndexes().getMutableMap();
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    public Builder putIndexes(
        java.lang.String key,
        com.dingodb.pb.meta.Index value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableIndexes().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>map&lt;string, .dingodb.pb.meta.Index&gt; indexes = 3 [json_name = "indexes"];</code>
     */
    public Builder putAllIndexes(
        java.util.Map<java.lang.String, com.dingodb.pb.meta.Index> values) {
      internalGetMutableIndexes().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }

    private int version_ ;
    /**
     * <code>uint32 version = 4 [json_name = "version"];</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>uint32 version = 4 [json_name = "version"];</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(int value) {

      version_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 version = 4 [json_name = "version"];</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000008);
      version_ = 0;
      onChanged();
      return this;
    }

    private long ttl_ ;
    /**
     * <code>uint64 ttl = 5 [json_name = "ttl"];</code>
     * @return The ttl.
     */
    @java.lang.Override
    public long getTtl() {
      return ttl_;
    }
    /**
     * <code>uint64 ttl = 5 [json_name = "ttl"];</code>
     * @param value The ttl to set.
     * @return This builder for chaining.
     */
    public Builder setTtl(long value) {

      ttl_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 ttl = 5 [json_name = "ttl"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTtl() {
      bitField0_ = (bitField0_ & ~0x00000010);
      ttl_ = 0L;
      onChanged();
      return this;
    }

    private com.dingodb.pb.meta.PartitionRule tablePartition_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dingodb.pb.meta.PartitionRule, com.dingodb.pb.meta.PartitionRule.Builder, com.dingodb.pb.meta.PartitionRuleOrBuilder> tablePartitionBuilder_;
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     * @return Whether the tablePartition field is set.
     */
    public boolean hasTablePartition() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     * @return The tablePartition.
     */
    public com.dingodb.pb.meta.PartitionRule getTablePartition() {
      if (tablePartitionBuilder_ == null) {
        return tablePartition_ == null ? com.dingodb.pb.meta.PartitionRule.getDefaultInstance() : tablePartition_;
      } else {
        return tablePartitionBuilder_.getMessage();
      }
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    public Builder setTablePartition(com.dingodb.pb.meta.PartitionRule value) {
      if (tablePartitionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tablePartition_ = value;
      } else {
        tablePartitionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    public Builder setTablePartition(
        com.dingodb.pb.meta.PartitionRule.Builder builderForValue) {
      if (tablePartitionBuilder_ == null) {
        tablePartition_ = builderForValue.build();
      } else {
        tablePartitionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    public Builder mergeTablePartition(com.dingodb.pb.meta.PartitionRule value) {
      if (tablePartitionBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          tablePartition_ != null &&
          tablePartition_ != com.dingodb.pb.meta.PartitionRule.getDefaultInstance()) {
          getTablePartitionBuilder().mergeFrom(value);
        } else {
          tablePartition_ = value;
        }
      } else {
        tablePartitionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    public Builder clearTablePartition() {
      bitField0_ = (bitField0_ & ~0x00000020);
      tablePartition_ = null;
      if (tablePartitionBuilder_ != null) {
        tablePartitionBuilder_.dispose();
        tablePartitionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    public com.dingodb.pb.meta.PartitionRule.Builder getTablePartitionBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getTablePartitionFieldBuilder().getBuilder();
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    public com.dingodb.pb.meta.PartitionRuleOrBuilder getTablePartitionOrBuilder() {
      if (tablePartitionBuilder_ != null) {
        return tablePartitionBuilder_.getMessageOrBuilder();
      } else {
        return tablePartition_ == null ?
            com.dingodb.pb.meta.PartitionRule.getDefaultInstance() : tablePartition_;
      }
    }
    /**
     * <code>.dingodb.pb.meta.PartitionRule table_partition = 6 [json_name = "tablePartition"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dingodb.pb.meta.PartitionRule, com.dingodb.pb.meta.PartitionRule.Builder, com.dingodb.pb.meta.PartitionRuleOrBuilder> 
        getTablePartitionFieldBuilder() {
      if (tablePartitionBuilder_ == null) {
        tablePartitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dingodb.pb.meta.PartitionRule, com.dingodb.pb.meta.PartitionRule.Builder, com.dingodb.pb.meta.PartitionRuleOrBuilder>(
                getTablePartition(),
                getParentForChildren(),
                isClean());
        tablePartition_ = null;
      }
      return tablePartitionBuilder_;
    }

    private int engine_ = 0;
    /**
     * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
     * @return The enum numeric value on the wire for engine.
     */
    @java.lang.Override public int getEngineValue() {
      return engine_;
    }
    /**
     * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
     * @param value The enum numeric value on the wire for engine to set.
     * @return This builder for chaining.
     */
    public Builder setEngineValue(int value) {
      engine_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
     * @return The engine.
     */
    @java.lang.Override
    public com.dingodb.pb.common.Engine getEngine() {
      com.dingodb.pb.common.Engine result = com.dingodb.pb.common.Engine.forNumber(engine_);
      return result == null ? com.dingodb.pb.common.Engine.UNRECOGNIZED : result;
    }
    /**
     * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
     * @param value The engine to set.
     * @return This builder for chaining.
     */
    public Builder setEngine(com.dingodb.pb.common.Engine value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      engine_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.dingodb.pb.common.Engine engine = 7 [json_name = "engine"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEngine() {
      bitField0_ = (bitField0_ & ~0x00000040);
      engine_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> properties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetProperties() {
      if (properties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PropertiesDefaultEntryHolder.defaultEntry);
      }
      return properties_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableProperties() {
      if (properties_ == null) {
        properties_ = com.google.protobuf.MapField.newMapField(
            PropertiesDefaultEntryHolder.defaultEntry);
      }
      if (!properties_.isMutable()) {
        properties_ = properties_.copy();
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return properties_;
    }
    public int getPropertiesCount() {
      return internalGetProperties().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    @java.lang.Override
    public boolean containsProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getProperties() {
      return getPropertiesMap();
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getPropertiesMap() {
      return internalGetProperties().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getPropertiesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    @java.lang.Override
    public java.lang.String getPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearProperties() {
      bitField0_ = (bitField0_ & ~0x00000080);
      internalGetMutableProperties().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    public Builder removeProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableProperties().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableProperties() {
      bitField0_ |= 0x00000080;
      return internalGetMutableProperties().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    public Builder putProperties(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableProperties().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; properties = 8 [json_name = "properties"];</code>
     */
    public Builder putAllProperties(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableProperties().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000080;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dingodb.pb.meta.TableDefinition)
  }

  // @@protoc_insertion_point(class_scope:dingodb.pb.meta.TableDefinition)
  private static final com.dingodb.pb.meta.TableDefinition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dingodb.pb.meta.TableDefinition();
  }

  public static com.dingodb.pb.meta.TableDefinition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TableDefinition>
      PARSER = new com.google.protobuf.AbstractParser<TableDefinition>() {
    @java.lang.Override
    public TableDefinition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TableDefinition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TableDefinition> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dingodb.pb.meta.TableDefinition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

